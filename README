This is Rubber.

Rubber is a building system for LaTeX documents. It is based on a routine that
runs just as many compilations as necessary and runs companion programs like
BibTeX and Makeindex when needed. The module system provides a great
flexibility that virtually allows support for any package with no user
intervention, as well as pre- and post-processing of the document. A good
number of standard packages are supported, including graphics/graphicx with
automatic conversion between various graphics formats and Metapost
compilation. The associated tool "rubber-info" extracts information, such as
dependency relations or post-compilation diagnostics.


* Running directly from the repository

It is possible to run rubber directly from the repository without installation.
Just add the ``bin/`` directory to your PATH, or add a symbolic link
to the repository's ``bin/rubber`` from a file in your existing PATH.

* Installation

Compiling and running Rubber just requires Python version 2.2 or newer. For
compilation, you will need the Python Distutils, which are usually included in
developpement packages (in Debian, this is the python-dev package). Of course
it won't be of much use without a working LaTeX environment (Rubber is known
to work on teTeX and VTeX on various flavours of Unix including Darwin and
Cygwin, any feedback is welcome about other systems).

To compile and install Rubber via pip

$ ./setup.py sdist
$ pip install dist/<SOURCEDISTRIBUTION>.tar.gz

where <SOURCEDISTRIBUTION>.tar.gz is the file generated by running setup.py

To remove run

$ pip uninstall rubber

To install Rubber without pip use

$ ./setup.py install

* Usage

As civility requires, saying `rubber --help' and `rubber-info --help' provides
a short description of the command line's syntax. The included manual pages
(available in English and French) and Texinfo documentation contain more
precise usage information.


* Author

Rubber is written and maintained by Emmanuel Beffara <emmanuel@beffara.org>.

Thanks to all those who provided testing, comments and suggestions, and
re-thanks to those who wrote patches and bugfixes.

Any kind of feedback is appreciated, in order to make this program as useful,
robust and powerful as possible...
